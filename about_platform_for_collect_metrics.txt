Структура:
•	Ядро проекта и панель управления. Используется PHP 8, фреймворк Symfony 5, база данных PostgreSQL, Redis для хранения сессий, Centrifugo  для уведомлений о статусе задач в веб-интерфейс по websocket;
•	4 инстанса фоновых обработчика на NodeJS + Chrome браузер, 1 фоновый обработчик на PHP. Принимают задачи из брокера сообщений RabbitMQ, либо из БД. NodeJS выполняет такие задачи:
o	сохранение скриншотов в различных разрешениях;
o	сбор HTML CodeSniffer метрик – для сбора метрик, сгруппированных по WCAG принципам;
o	сбор aXe метрик – преимущественно метрики контраста, и другие, относящиеся к WCAG, разделу 508 закона США "American Workforce Rehabilitation Act", отдельной авторской категории правил лучших практик в индустрии, а также правилам ACT Rules Community для автоматического тестирования;
o	сбор Lighthouse метрик (Desktop, Mobile), включает оценку доступности;
o	сбор AIM метрик, идёт обращение по websocket к локальному сервису AIM (собираем только количественные метрики - т.е. без метрик, отдающих изображения в base64 формате, для большей стабильности).
•	Хранилище. Локальный FTP сервер со скриншотами. Сама платформа работают именно с FTP, а не с файлами напрямую, поэтому в случае необходимости можно подключить любое FTP хранилище
•	AIM как сервис, обёрнутый в докер контейнер (2 инстанса).
Далее платформу можно расширять, подключить при необходимости сбор других метрик. Платформа быстро разворачивается и на удалённый сервер, и локально на компьютер для разработки с помощью созданных Docker образов. 
